// Copyright (C) 2017 The Android Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

apply plugin: 'maven-publish'
apply from: "$gradle.ext.androidxMediaSettingsDir/missing_aar_type_workaround.gradle"

afterEvaluate {
    if (gradle.ext.has('rootProjectIsAndroidXMedia3') && gradle.ext.rootProjectIsAndroidXMedia3) {
        publishing {
            repositories {
                maven {
                    url = findProperty('mavenRepo') ?: "${buildDir}/repo"
                }
            }
            publications {
                release(MavenPublication) {
                    from components.release
                    groupId = 'androidx.media3'
                    artifactId = findProperty('releaseArtifactId') ?: ''
                    version = findProperty('releaseVersion') ?: ''
                    configurations.create("sourcesElement") { variant ->
                        variant.visible = false
                        variant.canBeResolved = false
                        variant.attributes.attribute(
                            Usage.USAGE_ATTRIBUTE,
                            project.objects.named(Usage, Usage.JAVA_RUNTIME))
                        variant.attributes.attribute(
                            Category.CATEGORY_ATTRIBUTE,
                            project.objects.named(Category, Category.DOCUMENTATION))
                        variant.attributes.attribute(
                            Bundling.BUNDLING_ATTRIBUTE,
                            project.objects.named(Bundling, Bundling.EXTERNAL))
                        variant.attributes.attribute(
                            DocsType.DOCS_TYPE_ATTRIBUTE,
                            project.objects.named(DocsType, DocsType.SOURCES))
                        variant.outgoing.artifact(androidSourcesJar)
                        components.release.addVariantsFromConfiguration(variant) {}
                    }
                    pom {
                        name =
                            findProperty('releaseName')
                            ?: ''
                        description =
                            findProperty('releaseDescription')
                            ?: findProperty('releaseName')
                            ?: ''
                        licenses {
                            license {
                                name = 'The Apache Software License, Version 2.0'
                                url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                                distribution = 'repo'
                            }
                        }
                        developers {
                            developer {
                                name = 'The Android Open Source Project'
                            }
                        }
                        scm {
                            connection = 'scm:git:https://github.com/androidx/media.git'
                            url = 'https://github.com/androidx/media'
                        }
                        withXml {
                            addMissingAarTypeToXml(it)
                        }
                    }
                }
            }
        }
    }
}
tasks.withType(PublishToMavenRepository) { it.dependsOn lint, test }

task androidSourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    from android.sourceSets.main.java.srcDirs
}
